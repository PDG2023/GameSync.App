# This workflow will build a .NET project
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-net

name: cicd
env:
  NUGET_PACKAGES: ${{ github.workspace }}/.nuget/packages
  DOTNET_NOLOGO: true
  DOTNET_CLI_TELEMETRY_OPTOUT: true
  TAG: gamesync.azurecr.io/gamesyncapi:latest
on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]
    
permissions:
  contents: read
  
jobs:
  validate-api:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
    - uses: actions/setup-dotnet@v3
      with:
        dotnet-version: 7.0.x
    - run: dotnet test GameSync.sln -c Release
    
  validate-front: 
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
    - uses: actions/setup-node@v3
      with:
        node-version: 20
        cache: "npm"
        cache-dependency-path: GameSync.Front/package-lock.json
        
    - run: npm ci
      working-directory: ./GameSync.Front
    - run: npm test
      working-directory: ./GameSync.Front
    
  release:
    needs: [validate-api, validate-front]
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v2
      
    - name: Logging into the ACR registry
      uses: azure/docker-login@v1
      with:
        login-server: gamesync.azurecr.io
        username: ${{secrets.ACR_USERNAME}}
        password: ${{secrets.ACR_PASSWORD}}
        
    - uses: docker/build-push-action@v4
      with:
          push: true
          tags: ${{TAG}}
          cache-from: type=gha
          cache-to: type=gha,mode=max